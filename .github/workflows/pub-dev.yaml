name: Tests API
on:
  push:
    branches:
    - master
    # - dev
  # pull_request:

jobs:
  unit-test:
    name: Unit tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-18.04, windows-2019, macos-10.15]
        os: [ubuntu-18.04]
    # runs-on: ubuntu-latest
    # container:
    #   image:  google/dart:latest
    steps:
    # Set up Flutter.
    - name: Setup Flutter environment
      uses: subosito/flutter-action@4389e6cbc6cb8a4b18c628ff96ff90be0e926aa8
      with:
        channel: master
    - run: flutter doctor -v

    # Checkout gallery code and get packages.
    - name: Checkout GitHub Action code
      uses: actions/checkout@v2
    - run: flutter pub get

    # Analyze, check formatting, and run unit tests.
    - name: Analyze the project
      run: flutter analyze
    - name: Check the format
      run: flutter format --set-exit-if-changed --dry-run .
    - name: Run unit tests
      run: flutter test

    # Trigger other to test the application
    - name: Test applications
      run: |
          curl \
          -X POST \
          -u '${{secrets.USER_NAME}}:${{secrets.APPLICATION_ACCESS_TOKEN}}' \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/luongnv89/geiger_toolbox_api_flutter/actions/workflows/main.yaml/dispatches \
          -d '{"ref":"ref"}'

    # # publish to pub.dev
    # - name: Check before publish to pub.dev
    #   run: dart pub publish --dry-run
    # - name: Setup credentials
    #   run: |
    #     cat <<EOF > $PUB_CACHE/credentials.json
    #     {
    #       "accessToken":"${{ secrets.OAUTH_ACCESS_TOKEN }}",
    #       "refreshToken":"${{ secrets.OAUTH_REFRESH_TOKEN }}",
    #       "idToken":"${{ secrets.OAUTH_ID_TOKEN }}",
    #       "tokenEndpoint":"https://accounts.google.com/o/oauth2/token",
    #       "scopes": [ "openid", "https://www.googleapis.com/auth/userinfo.email" ],
    #       "expiration": 1630429975373
    #     }
    #     EOF
    # - name: Publish package
    #   run: dart pub publish -f